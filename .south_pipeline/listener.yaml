---
apiVersion: tekton.dev/v1beta1
kind: TriggerTemplate
metadata:
  name: trigger-template-secure-kube
spec:
  params:
    - name: ibmcloud-api
      description: the ibmcloud api
      default: https://cloud.ibm.com
    - name: ibmcloud-api-cluster-env
      description: the ibmcloud api
      default: https://cloud.ibm.com
    - name: repository
      description: The git repo
    - name: branch
      description: the branch for the git repo
      default: "master"
    - name: revision
      description: the git revision/commit for the git repo
      default: ""
    - name: git-token
      description: access token for the git repo
      default: ""
    - name: app-name
      description: application name
    - name: fail-on-lint-errors
      description: force failure of task when docker lint errors are found
      default: "true"
    - name: registry-region
      description: The IBM Cloud region for image registry
    - name: registry-namespace
      description: container registry namespace
    - name: image-name
      description: image name
    - name: path-to-context
      default: "."
    - name: path-to-dockerfile
      default: "."
    - name: dockerfile
      default: "Dockerfile"
    - name: fail-on-scanned-issues
      description: force failure of task when vulnerability advisor scan issues are found
      default: "false"
    - name: deployment-file
      description: file containing the kubernetes deployment definition
      default: "deployment.yml"
    - name: keep-ingress-custom-domain
      description: force keep of ingress custom domain in deployment-file if any (true|false)
      default: "false"
    - name: pipeline-debug
      default: "0"
    - name: cluster-name
      description: the name of the cluster to target
    - name: dev-region
    - name: dev-resource-group
    - name: dev-cluster-namespace
      description: namespace dev
    - name: apikey
    - name: commons-hosted-region
      default: "https://raw.githubusercontent.com/open-toolchain/commons/master"
    - name: custom-image-registry-dockerconfigjson
      description: |
        dockerconfigjson for custom images used in pipeline tasks.
        See https://cloud.ibm.com/docs/devsecops?topic=devsecops-troubleshoot-devsecops#troubleshoot-pipe-abort-early
      default: "eyJhdXRocyI6e319" # ie. {"auths":{}} base64 encoded

    - name: build-script
      description: The command(s) to run the build in run-build step. It will override the default commands
      default: ""

    #Cra specific params
    - name: ibmcloud-region
      description: (Optional) ibmcloud region to use
      default: ""

    # Common command related params
    - name: env-props
      description: (Optional) A custom configuration of environment properties to source before execution, ex. 'export ABC=123 export DEF=456'
      default: ""
    - name: fileignore
      description: (Optional) Filepath to .fileignore
      default: ""
    - name: ibmcloud-trace
      description: (Optional) Enables IBMCLOUD_TRACE for ibmcloud cli logging
      default: "false"
    - name: output
      description: (Optional) Prints command result to console
      default: "false"
    - name: path
      description: Repository path to scan
      default: "/artifacts"
    - name: strict
      description: (Optional) Enables strict mode for scanning
      default: "false"
    - name: toolchainid
      description: (Optional) The target toolchain id to be used. Defaults to the current toolchain id
      default: ""
    - name: verbose
      description: (Optional) Enable verbose log messages
      default: "false"

    # BOM related params
    - name: asset-type
      description: Security checks to run (apps, image, os, all)
      default: "all"
    - name: bom-report
      description: Filepath to store generated Bill of Materials
      default: "bom.json"
    - name: docker-build-flags
      description: (Optional) Customize docker build command for build stage scanning
      default: ""
    - name: docker-build-context
      description: (Optional) If specified, CRA will use the directory in the path parameter as docker build context
    - name: dockerfile-pattern
      description: (Optional) Pattern to identify Dockerfile in the repository
    - name: docker-registry-secret
      description: Secret to authenticate for docker-registry-url
    - name: docker-registry-url
      description: Registry url to use for docker login
      default: ""
    - name: docker-registry-username
      description: Username to authenticate for docker-registry-url
      default: ""
    - name: gradle-exclude-configs
      description: (Optional) Exclude gradle configurations, ex. 'runtimeClasspath,testCompileClasspath'
      default: ""
    - name: maven-exclude-scopes
      description: (Optional) Exclude maven scopes, ex. 'test,compile'
      default: ""
    - name: nodejs-create-package-lock
      description: (Optional) Enable the task to build the package-lock.json for node.js projects
      default: "false"
    - name: prev-report
      description: Filepath to previous BoM report to skip Dockerfile or application manifest scans
      default: ""

    # Deploy Analytic related params
    - name: deploy-report
      description: Filepath to store generated Deploy Analytic report
      default: "deploy.json"

    # Vulnerability related params
    - name: cveignore
      description: (Optional) Filepath to cveignore
      default: ""
    - name: exclude-dev
      description: (Optional) Exclude dev dependencies during vulnerability scan
      default: "false"
    - name: vulnerability-report
      description: Filepath to store Vulnerability report, not stored if empty
      default: "vulnerability.json"

    # User control params
    - name: cra-scan-image
      description: Image to use for `scan` task
      default: "icr.io/continuous-delivery/pipeline/pipeline-base-ubi:3.29"
    - name: toolchain-build-image
      description: Image to use for `build` task
      default: "icr.io/continuous-delivery/pipeline/pipeline-base-ubi:3.29"
    - name: tester-tests-image
      description: Image to use for `unit-test` task
      default: "icr.io/continuous-delivery/pipeline/pipeline-base-ubi:3.29"

  resourcetemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: secure-kube-$(uid)-pvc
      spec:
        resources:
          requests:
            storage: 5Gi
        volumeMode: Filesystem
        accessModes:
          - ReadWriteOnce
    - apiVersion: v1
      kind: Secret
      metadata:
        name: cd-secret
      type: Opaque
      stringData:
        API_KEY: $(params.apikey)
        DOCKER_SECRET: $(params.docker-registry-secret)
    - apiVersion: v1
      kind: Secret
      data:
        .dockerconfigjson: $(params.custom-image-registry-dockerconfigjson)
      metadata:
        name: custom-image-registry-pull-secret
      type: kubernetes.io/dockerconfigjson
    - apiVersion: tekton.dev/v1beta1
      kind: PipelineRun
      metadata:
        name: secure-kube-$(uid)
      spec:
        pipelineRef:
          name: secure-kube-pipeline
        params:
          - name: ibmcloud-api
            value: $(params.ibmcloud-api)
          - name: ibmcloud-api-cluster-env
            value: $(params.ibmcloud-api-cluster-env)
          - name: repository
            value: $(params.repository)
          - name: branch
            value: $(params.branch)
          - name: revision
            value: $(params.revision)
          - name: git-token
            value: $(params.git-token)
          - name: app-name
            value: $(params.app-name)
          - name: fail-on-lint-errors
            value: $(params.fail-on-lint-errors)
          - name: registry-region
            value: $(params.registry-region)
          - name: registry-namespace
            value: $(params.registry-namespace)
          - name: image-name
            value: $(params.image-name)
          - name: path-to-context
            value: $(params.path-to-context)
          - name: path-to-dockerfile
            value: $(params.path-to-dockerfile)
          - name: dockerfile
            value: $(params.dockerfile)
          - name: fail-on-scanned-issues
            value: $(params.fail-on-scanned-issues)
          - name: toolchain-build-image
            value: $(params.toolchain-build-image)
          - name: build-script
            value: $(params.build-script)
          - name: tester-tests-image
            value: $(params.tester-tests-image)
          - name: deployment-file
            value: $(params.deployment-file)
          - name: keep-ingress-custom-domain
            value: $(params.keep-ingress-custom-domain)
          - name: dev-region
            value: $(params.dev-region)
          - name: dev-resource-group
            value: $(params.dev-resource-group)
          - name: cluster-name
            value: $(params.cluster-name)
          - name: dev-cluster-namespace
            value: $(params.dev-cluster-namespace)
          - name: pipeline-debug
            value: $(params.pipeline-debug)
          - name: commons-hosted-region
            value: $(params.commons-hosted-region)
          #cra specific
          - name: ibmcloud-region
            value: $(params.ibmcloud-region)
          - name: env-props
            value: $(params.env-props)
          - name: fileignore
            value: $(params.fileignore)
          - name: ibmcloud-trace
            value: $(params.ibmcloud-trace)
          - name: output
            value: $(params.output)
          - name: path
            value: $(params.path)
          - name: strict
            value: $(params.strict)
          - name: toolchainid
            value: $(params.toolchainid)
          - name: verbose
            value: $(params.verbose)
          - name: asset-type
            value: $(params.asset-type)
          - name: bom-report
            value: $(params.bom-report)
          - name: docker-build-flags
            value: $(params.docker-build-flags)
          - name: docker-build-context
            value: $(params.docker-build-context)
          - name: dockerfile-pattern
            value: $(params.dockerfile-pattern)
          - name: docker-registry-url
            value: $(params.docker-registry-url)
          - name: docker-registry-username
            value: $(params.docker-registry-username)
          - name: gradle-exclude-configs
            value: $(params.gradle-exclude-configs)
          - name: maven-exclude-scopes
            value: $(params.maven-exclude-scopes)
          - name: nodejs-create-package-lock
            value: $(params.nodejs-create-package-lock)
          - name: prev-report
            value: $(params.prev-report)
          - name: deploy-report
            value: $(params.deploy-report)
          - name: cveignore
            value: $(params.cveignore)
          - name: exclude-dev
            value: $(params.exclude-dev)
          - name: vulnerability-report
            value: $(params.vulnerability-report)
          - name: cra-scan-image
            value: $(params.cra-scan-image)
        workspaces:
          - name: pipeline-ws
            persistentVolumeClaim:
              claimName: secure-kube-$(uid)-pvc
        podTemplate:
          imagePullSecrets:
            - name: custom-image-registry-pull-secret
---
apiVersion: tekton.dev/v1beta1
kind: TriggerBinding
metadata:
  name: trigger-binding-manual
spec:
  params:
---
apiVersion: tekton.dev/v1beta1
kind: EventListener
metadata:
  name: manual-run
spec:
  triggers:
    - binding:
        name: trigger-binding-manual
      template:
        name: trigger-template-secure-kube
---
apiVersion: tekton.dev/v1beta1
kind: TriggerBinding
metadata:
  name: github-ent-commit
spec:
  params:
    - name: branch
      value: $(event.ref)
    - name: commit-id
      value: $(event.after)
    - name: repository
      value: $(event.repository.html_url)
---        
apiVersion: tekton.dev/v1beta1
kind: EventListener
metadata:
  name: github-ent-commit
spec:
  triggers:
    - bindings: 
        - name: github-ent-commit   
      template:
        name: trigger-template-secure-kube
---
apiVersion: tekton.dev/v1beta1
kind: TriggerBinding
metadata:
  name: github-commit
spec:
  params:
    - name: branch
      value: $(event.ref)
    - name: commit-id
      value: $(event.after)
    - name: repository
      value: $(event.repository.html_url)
---
apiVersion: tekton.dev/v1beta1
kind: EventListener
metadata:
  name: github-commit
spec:
  triggers:
    - bindings:  
        - name: github-commit   
      template:
        name: trigger-template-secure-kube
---
apiVersion: tekton.dev/v1beta1
kind: TriggerBinding
metadata:
  name: grit-or-gitlab-commit
spec:
  params:
    - name: branch
      value: $(event.ref)
    - name: commit-id
      value: $(event.checkout_sha)
    - name: repository
      value: $(event.project.http_url)
---
apiVersion: tekton.dev/v1beta1
kind: EventListener
metadata:
  name: grit-or-gitlab-commit
spec:
  triggers:
    - bindings:   
        - name: grit-or-gitlab-commit
      template:
        name: trigger-template-secure-kube
---
apiVersion: tekton.dev/v1beta1
kind: TriggerBinding
metadata:
  name: bitbucket-commit
spec:
  params:
    - name: repository
      value: "$(event.repository.links.html.href)"
    - name: revision
      value: "$(event.push.changes[0].new.target.hash)"
    - name: branch
      value: "$(event.push.changes[0].new.name)"
    - name: commit-id
      value: "$(event.pull_request.head.sha)"
---
apiVersion: tekton.dev/v1beta1
kind: EventListener
metadata:
  name: bitbucket-commit
spec:
  triggers:
    - binding:
        name: bitbucket-commit
      template:
        name: trigger-template-secure-kube
